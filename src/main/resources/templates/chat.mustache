<!DOCTYPE html>
<html>
<head>
    <title>Chat Room</title>
    <script src="https://cdn.jsdelivr.net/npm/sockjs-client/dist/sockjs.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/stompjs/lib/stomp.min.js"></script>
</head>
<body>
<h1>Chat Room</h1>
<h1 id="user-name">username</h1>
<div id="chat-page">
    <div id="chat-messages">
        <!-- 채팅 메시지 출력 -->
    </div>
    <input type="text" id="chat-message-input" placeholder="Type a message..." onkeypress="if(event.keyCode===13) sendMessage()"/>
    <button onclick="sendMessage()">Send</button>
</div>
<br>
<br>
<a href="/">목록으로</a>


<script type="text/javascript">
    var chatRoomId = '{{chatRoomId}}';
    var stompClient = null;

    function getRandomUser() {
        var randomNum = Math.floor(Math.random() * 1000); // 0 ~ 999 사이의 랜덤한 숫자 생성
        return "User" + randomNum; // "User"에 랜덤한 숫자를 붙여 반환
    }

    function getUserName() {
        var userName = sessionStorage.getItem('userName');
        if (!userName) {
            userName = getRandomUser();
            sessionStorage.setItem('userName', userName);
            document.getElementById('user-name').innerText = userName;
        }
        return userName;
    }

    var sender = getUserName(); // 세션 스토리지에서 사용자 이름 가져오기

    function connect() {
        var socket = new SockJS('/ws');
        stompClient = Stomp.over(socket);
        stompClient.connect({}, function (frame) {
            console.log('Connected: ' + frame);
            stompClient.subscribe(`/topic/${chatRoomId}`, function (message) {
                var {sender, type, content} = JSON.parse(message.body);
                showMessage(`${sender}: ${content}`);
            });
            stompClient.send(`/app/chat/${chatRoomId}/addUser`, {}, JSON.stringify({sender}));
        });

    }

    function sendMessage() {
        var messageContent = document.getElementById('chat-message-input').value;
        if(messageContent) {
            stompClient.send(`/app/chat/${chatRoomId}/sendMessage`, {}, JSON.stringify({sender, type: 'CHAT', content: messageContent}));
        }
        document.getElementById('chat-message-input').value = '';
    }

    function showMessage(message) {
        var messageElement = document.createElement('div');
        messageElement.appendChild(document.createTextNode(message));
        document.getElementById('chat-messages').appendChild(messageElement);
    }

    function loadHistory() {
        fetch(`/api/chat/${chatRoomId}/history`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(message => {
                        showMessage(`${message.sender}: ${message.content}`);
                    });
                });
    }


    loadHistory();
    connect();

</script>
</body>
</html>
